Advent of Code 2021 day24, Debug Build
0 of 0 Part1 tests ran successfully (0ms)
0 of 0 Part2 tests ran successfully (0ms)
   0: inp w          // w = d1
   1: mul x 0        // nop
   2: add x z        // nop
   3: mod x 26       // nop
*  4: div z 1        // nop
*  5: add x 12       // x = 12
   6: eql x w        // x = 0
   7: eql x 0        // x = 1
   8: mul y 0        // nop
   9: add y 25       // y = 25
  10: mul y x        // nop
  11: add y 1        // y = 26
  12: mul z y        // nop
  13: mul y 0        // nop
  14: add y w        // y = d1
* 15: add y 7        // y = d1 + 7
  16: mul y x        // nop
  17: add z y        // z = d1 + 7
  18: inp w          // w = d2
  19: mul x 0        // x = 0
  20: add x z        // x = d1 + 7
  21: mod x 26       // nop
* 22: div z 1        // nop
* 23: add x 11       // x = d1 + 18
  24: eql x w        // x = 0
  25: eql x 0        // x = 1
  26: mul y 0        // y = 0
  27: add y 25       // y = 25
  28: mul y x        // nop
  29: add y 1        // y = 26
  30: mul z y        // z = ( d1 + 7 ) * 26
  31: mul y 0        // y = 0
  32: add y w        // y = d2
* 33: add y 15       // y = d2 + 15
  34: mul y x        // nop
  35: add z y        // z = ( d1 + 7 ) * 26 + d2 + 15
  36: inp w          // w = d3
  37: mul x 0        // x = 0
  38: add x z        // x = ( d1 + 7 ) * 26 + d2 + 15
  39: mod x 26       // x = d2 + 15
* 40: div z 1        // nop
* 41: add x 12       // x = d2 + 27
  42: eql x w        // x = 0
  43: eql x 0        // x = 1
  44: mul y 0        // y = 0
  45: add y 25       // y = 25
  46: mul y x        // nop
  47: add y 1        // y = 26
  48: mul z y        // z = ( ( d1 + 7 ) * 26 + d2 + 15 ) * 26
  49: mul y 0        // y = 0
  50: add y w        // y = d3
* 51: add y 2        // y = d3 + 2
  52: mul y x        // nop
  53: add z y        // z = ( ( d1 + 7 ) * 26 + d2 + 15 ) * 26 + d3 + 2
  54: inp w          // w = d4
  55: mul x 0        // x = 0
  56: add x z        // x = ( ( d1 + 7 ) * 26 + d2 + 15 ) * 26 + d3 + 2
  57: mod x 26       // x = d3 + 2
* 58: div z 26       // z = ( d1 + 7 ) * 26 + d2 + 15
* 59: add x -3       // x = d3 - 1
  60: eql x w        // x = d3 - 1 == d4 ? 1 : 0
  61: eql x 0        // x = d3 - 1 != d4 ? 1 : 0
  62: mul y 0        // y = 0
  63: add y 25       // y = 25
  64: mul y x        // y = d3 - 1 != d4 ? 25 : 0
  65: add y 1        // y = d3 - 1 != d4 ? 26 : 1
  66: mul z y        // z = ( ( d1 + 7 ) * 26 + d2 + 15 ) * ( d3 - 1 != d4 ? 26 : 1 )
  67: mul y 0        // y = 0
  68: add y w        // y = d4
* 69: add y 15       // y = d4 + 15
  70: mul y x        // y = d3 - 1 != d4 ? ( d4 + 15 ) : 0
  71: add z y        // z = ( ( d1 + 7 ) * 26 + d2 + 15 ) * ( d3 - 1 != d4 ? 26 : 1 ) + ( d3 - 1 != d4 ? ( d4 + 15 ) : 0 )
  72: inp w          // w = d5
  73: mul x 0
  74: add x z
  75: mod x 26
* 76: div z 1
* 77: add x 10
  78: eql x w
  79: eql x 0
  80: mul y 0
  81: add y 25
  82: mul y x
  83: add y 1
  84: mul z y
  85: mul y 0
  86: add y w
* 87: add y 14
  88: mul y x
  89: add z y
  90: inp w          // w = d6
  91: mul x 0
  92: add x z
  93: mod x 26
* 94: div z 26
* 95: add x -9
  96: eql x w
  97: eql x 0
  98: mul y 0
  99: add y 25
 100: mul y x
 101: add y 1
 102: mul z y
 103: mul y 0
 104: add y w
*105: add y 2
 106: mul y x
 107: add z y
 108: inp w          // w = d7
 109: mul x 0
 110: add x z
 111: mod x 26
*112: div z 1
*113: add x 10
 114: eql x w
 115: eql x 0
 116: mul y 0
 117: add y 25
 118: mul y x
 119: add y 1
 120: mul z y
 121: mul y 0
 122: add y w
*123: add y 15
 124: mul y x
 125: add z y
 126: inp w          // w = d8
 127: mul x 0
 128: add x z
 129: mod x 26
*130: div z 26
*131: add x -7
 132: eql x w
 133: eql x 0
 134: mul y 0
 135: add y 25
 136: mul y x
 137: add y 1
 138: mul z y
 139: mul y 0
 140: add y w
*141: add y 1
 142: mul y x
 143: add z y
 144: inp w          // w = d9
 145: mul x 0
 146: add x z
 147: mod x 26
*148: div z 26
*149: add x -11
 150: eql x w
 151: eql x 0
 152: mul y 0
 153: add y 25
 154: mul y x
 155: add y 1
 156: mul z y
 157: mul y 0
 158: add y w
*159: add y 15
 160: mul y x
 161: add z y
 162: inp w          // w = d10
 163: mul x 0
 164: add x z
 165: mod x 26
*166: div z 26
*167: add x -4
 168: eql x w
 169: eql x 0
 170: mul y 0
 171: add y 25
 172: mul y x
 173: add y 1
 174: mul z y
 175: mul y 0
 176: add y w
*177: add y 15
 178: mul y x
 179: add z y
 180: inp w          // w = d11
 181: mul x 0
 182: add x z
 183: mod x 26
*184: div z 1
*185: add x 14
 186: eql x w
 187: eql x 0
 188: mul y 0
 189: add y 25
 190: mul y x
 191: add y 1
 192: mul z y
 193: mul y 0
 194: add y w
*195: add y 12
 196: mul y x
 197: add z y
 198: inp w          // w = d12
 199: mul x 0
 200: add x z
 201: mod x 26
*202: div z 1
*203: add x 11
 204: eql x w
 205: eql x 0
 206: mul y 0
 207: add y 25
 208: mul y x
 209: add y 1
 210: mul z y
 211: mul y 0
 212: add y w
*213: add y 2
 214: mul y x
 215: add z y
 216: inp w          // w = d13
 217: mul x 0
 218: add x z
 219: mod x 26
*220: div z 26
*221: add x -8
 222: eql x w
 223: eql x 0
 224: mul y 0
 225: add y 25
 226: mul y x
 227: add y 1
 228: mul z y
 229: mul y 0
 230: add y w
*231: add y 13
 232: mul y x
 233: add z y
 234: inp w          // w = d14
 235: mul x 0
 236: add x z
 237: mod x 26
*238: div z 26
*239: add x -10
 240: eql x w
 241: eql x 0
 242: mul y 0
 243: add y 25
 244: mul y x
 245: add y 1
 246: mul z y
 247: mul y 0
 248: add y w
*249: add y 13
 250: mul y x
 251: add z y
Part1: , (1ms)
Part2: , (0ms)
